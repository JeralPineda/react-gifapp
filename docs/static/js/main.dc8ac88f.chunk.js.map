{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACG,sBAAMC,SAVY,SAACC,GAEnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAIjB,SACG,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAflB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCRhBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,0DAE2CC,UAAUH,GAFrD,sDAIDI,MAAMF,GAJL,cAIdG,EAJc,gBAOGA,EAAKC,OAPR,uBAOZC,EAPY,EAOZA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC5B,MAAO,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAbpB,kBAiBbM,GAjBa,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACtC,OACG,sBAAKc,UAAU,2DAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDAO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACvB,ECHyB,SAACA,GAC1B,MAA0Bd,mBAAS,CAChCqB,KAAM,GACNa,SAAS,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OATAC,qBAAU,WACPxB,EAAQC,GAAUwB,MAAK,SAACC,GACrBH,EAAS,CACNf,KAAMkB,EACNL,SAAS,SAGf,CAACpB,IAEGqB,EDb2BK,CAAa1B,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACG,qCACG,oBAAIJ,UAAU,sDAAd,SAAqEhB,IAEpEoB,GAAW,mBAAGJ,UAAU,qDAAb,qBAEZ,qBAAKA,UAAU,YAAf,SACIH,EAAOJ,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEMtBgB,EAlBO,WACnB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACG,qCACG,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACI2C,EAAWnB,KAAI,SAACT,GAAD,OACb,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCR7B6B,IAASC,OAAO,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.dc8ac88f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n   const [inputValue, setInputValue] = useState('');\r\n\r\n   //Extraemos el valor ingresado en el input\r\n   const handleInputChange = (e) => {\r\n      setInputValue(e.target.value);\r\n   };\r\n\r\n   const handleSubmit = (e) => {\r\n      //    Prevenimos que recargue\r\n      e.preventDefault();\r\n\r\n      if (inputValue.trim().length > 2) {\r\n         setCategories((cats) => [inputValue, ...cats]);\r\n         setInputValue('');\r\n      }\r\n   };\r\n   return (\r\n      <form onSubmit={handleSubmit}>\r\n         <input type='text' value={inputValue} onChange={handleInputChange} />\r\n      </form>\r\n   );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n   setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n   // Peticion http\r\n   const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=yfxK1j1iSVjkUj0lGKX2RKL8Oqyu0svM`;\r\n\r\n   const resp = await fetch(url);\r\n\r\n   //   Extraemos la data de la peticiÃ³n\r\n   const { data } = await resp.json();\r\n\r\n   const gifs = data.map((img) => {\r\n      return {\r\n         id: img.id,\r\n         title: img.title,\r\n         url: img.images?.downsized_medium.url,\r\n      };\r\n   });\r\n\r\n   return gifs;\r\n};\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n   return (\r\n      <div className='card animate__animated animate__fadeIn animate__delay-2s'>\r\n         <img src={url} alt={title} />\r\n         <p>{title}</p>\r\n      </div>\r\n   );\r\n};\r\n","import React from 'react';\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n   const { data: images, loading } = useFetchGifs(category);\r\n\r\n   return (\r\n      <>\r\n         <h3 className='animate__animated animate__fadeIn animate__delay-2s'>{category}</h3>\r\n\r\n         {loading && <p className='animate__animated animate__flash animate__delay-2s'>Loading</p>}\r\n\r\n         <div className='card-grid'>\r\n            {images.map((img) => (\r\n               <GifGridItem key={img.id} {...img} />\r\n            ))}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n   const [state, setState] = useState({\r\n      data: [],\r\n      loading: true,\r\n   });\r\n\r\n   //    Queremos que este codigo se ejecute cuando es renderizado por primera vez\r\n   useEffect(() => {\r\n      getGifs(category).then((imgs) => {\r\n         setState({\r\n            data: imgs,\r\n            loading: false,\r\n         });\r\n      });\r\n   }, [category]);\r\n\r\n   return state; // {data: [], loanding: true}\r\n};\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GiftExpertApp = () => {\r\n   const [categories, setCategories] = useState(['One Punch']);\r\n\r\n   return (\r\n      <>\r\n         <h2>GiftExpertApp</h2>\r\n         <AddCategory setCategories={setCategories} />\r\n         <hr />\r\n\r\n         <ol>\r\n            {categories.map((category) => (\r\n               <GifGrid key={category} category={category} />\r\n            ))}\r\n         </ol>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default GiftExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GiftExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(<GiftExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}